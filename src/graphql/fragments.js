"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GRAPHQL_FRAGMENTS = void 0;
var graphql_request_1 = require("graphql-request");
exports.GRAPHQL_FRAGMENTS = (0, graphql_request_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  fragment logo on Setting {\n    logo {\n      data {\n        id\n        attributes {\n          altText: alternativeText\n          url\n        }\n      }\n    }\n  }\n\n  fragment cover on Post {\n    cover {\n      data {\n        id\n        attributes {\n          altText: alternativeText\n          url\n        }\n      }\n    }\n  }\n\n  fragment menuLink on Setting {\n    menuLink {\n      id\n      link\n      text\n      newTab\n    }\n  }\n\n  fragment tag on Tag {\n    displayName\n    slug\n  }\n\n  fragment author on Author {\n    displayName\n    slug\n  }\n\n  fragment category on Category {\n    displayName: DisplayName\n    slug\n  }\n\n  fragment tags on Post {\n    tags {\n      data {\n        attributes {\n          ...tag\n        }\n      }\n    }\n  }\n\n  fragment authors on Post {\n    author {\n      data {\n        attributes {\n          ...author\n        }\n      }\n    }\n  }\n\n  fragment categories on Post {\n    categories {\n      data {\n        attributes {\n          ...category\n        }\n      }\n    }\n  }\n\n  fragment post on Post {\n    slug\n    title\n    excerpt\n    content\n    allowComments\n    ...cover\n    ...categories\n    ...tags\n    ...authors\n  }\n\n  fragment posts on PostEntityResponseCollection {\n    data {\n      id\n      attributes {\n        ...post\n      }\n    }\n  }\n\n  fragment settings on SettingEntityResponse {\n    data {\n      id\n      attributes {\n        blogName\n        blogDescription\n        ...logo\n        ...menuLink\n        footerText\n      }\n    }\n  }\n"], ["\n  fragment logo on Setting {\n    logo {\n      data {\n        id\n        attributes {\n          altText: alternativeText\n          url\n        }\n      }\n    }\n  }\n\n  fragment cover on Post {\n    cover {\n      data {\n        id\n        attributes {\n          altText: alternativeText\n          url\n        }\n      }\n    }\n  }\n\n  fragment menuLink on Setting {\n    menuLink {\n      id\n      link\n      text\n      newTab\n    }\n  }\n\n  fragment tag on Tag {\n    displayName\n    slug\n  }\n\n  fragment author on Author {\n    displayName\n    slug\n  }\n\n  fragment category on Category {\n    displayName: DisplayName\n    slug\n  }\n\n  fragment tags on Post {\n    tags {\n      data {\n        attributes {\n          ...tag\n        }\n      }\n    }\n  }\n\n  fragment authors on Post {\n    author {\n      data {\n        attributes {\n          ...author\n        }\n      }\n    }\n  }\n\n  fragment categories on Post {\n    categories {\n      data {\n        attributes {\n          ...category\n        }\n      }\n    }\n  }\n\n  fragment post on Post {\n    slug\n    title\n    excerpt\n    content\n    allowComments\n    ...cover\n    ...categories\n    ...tags\n    ...authors\n  }\n\n  fragment posts on PostEntityResponseCollection {\n    data {\n      id\n      attributes {\n        ...post\n      }\n    }\n  }\n\n  fragment settings on SettingEntityResponse {\n    data {\n      id\n      attributes {\n        blogName\n        blogDescription\n        ...logo\n        ...menuLink\n        footerText\n      }\n    }\n  }\n"])));
var templateObject_1;
